Lambda Function (AWS) and Cloud Function (Google Cloud) are serverless computing services provided by AWS and Google Cloud, respectively. These services allow you to run your code without provisioning or managing servers. You only pay for the compute time you consume and the service automatically scales with the number of requests.

Here's a quick comparison:

- AWS Lambda: Serverless compute service on Amazon Web Services (AWS).
- Google Cloud Functions: Serverless compute service on Google Cloud Platform (GCP).

Both services work in a similar way. When an event is triggered, the cloud provider automatically provisions the necessary resources to run your code, execute the function, and then deallocates the resources when the function is complete.

Common use cases for Lambda Functions and Cloud Functions include:

1. Event-driven architectures: You can use these functions to respond to events generated by other cloud services, such as changes in databases, file uploads to storage, or API requests.
2. Data processing: You can use these functions to process or transform data, such as data validation, data transformation, or data analysis.
3. APIs and Microservices: You can build APIs and microservices by connecting these functions to API Gateway services provided by AWS or Google Cloud.

Here are examples for both AWS Lambda and Google Cloud Functions:

**AWS Lambda Example (Python):**

1. Create a file named `lambda_function.py` with the following code:

```python
import json

def lambda_handler(event, context):
    # Process input
    input_text = event['input_text']

    # Perform some operation
    result = input_text.upper()

    # Return the result
    return {
        'statusCode': 200,
        'body': json.dumps({
            'result': result
        })
    }
```

2. Zip the file: `zip lambda_function.zip lambda_function.py`
3. Upload the zip file to an AWS Lambda function in the AWS Management Console.
4. Set the "Handler" to `lambda_function.lambda_handler`.
5. Trigger the Lambda function with an event like:

```json
{
  "input_text": "hello, world!"
}
```

**Google Cloud Functions Example (Python):**

1. Create a file named `main.py` with the following code:

```python
def cloud_function(request):
    # Process input
    request_json = request.get_json()
    input_text = request_json['input_text']

    # Perform some operation
    result = input_text.upper()

    # Return the result
    return {
        'result': result
    }
```

2. Create a file named `requirements.txt` with any dependencies (e.g., `Flask` and `gunicorn` for HTTP functions).
3. Deploy the function to Google Cloud:

```
gcloud functions deploy cloud_function \
    --runtime python310 \
    --trigger-http \
    --allow-unauthenticated
```

4. Trigger the Cloud Function with a JSON payload like:

```json
{
  "input_text": "hello, world!"
}
```

These examples demonstrate a simple serverless function that receives an input string and returns the uppercase version of it.